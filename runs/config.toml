[Main]
seed = 42
n_jobs = 1

[Estimator]
model = "LinearRegression"
params = {"fit_intercept" = false, "normalize" = true}

[Grid]
param_grid = {"fit_intercept" = [true, false]}
scoring = "r2"
cv = 10
verbose = 0

[Data]
path = "../data/matched.npy"

[Data.features]
# For each feature must specify "scaler". Optionally can specify
# "log" (bool), whether to log-transform the feature, or kwargs (dict),
# the optional arguments passed into the scaler.
rho0 = {"scaler" = "StandardScaler", "log" = true}
Mvir = {"scaler" = "StandardScaler", "log" = true}
# spin = {"scaler" = "StandardScaler", "log" = true}
# potential = {"scaler" = "StandardScaler"} 


[Data.target]
MS = {"scaler" = "StandardScaler", "log" = true}

[Data.split]
[Data.split.kwargs]
log_target = true
test_size = 0.2
Nbins = 10
n_splits = 50
ax_percentile = [+0.01, +0.99]

[Regressor]
[Regressor.permutation_importance]
scoring = "r2"
n_repeats = 5


[Regressor.feature_importance]
n_repeats = 10

[Regressor.learning_curve]
to_calculate = true
train_sizes = [0.1, 0.25, 0.5, 0.75, 1.0]
cv = 5
scoring = "r2"

